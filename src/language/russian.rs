//! Russian language support for timer resolution benchmarking

use crate::ui::localization_key::LocalizationKey;

impl LocalizationKey {
    /// Get Russian translation
    pub fn get_russian(&self) -> &'static str {
        match self {
            LocalizationKey::Title => "🚀 Расширенный инструмент тестирования разрешения таймера",
            LocalizationKey::SystemInfo => "📊 Системная информация",
            LocalizationKey::WorkingDir => "📂 Рабочая директория: {}",
            LocalizationKey::AdminPrivileges => "🛡️ Права администратора: ✓ Подтверждены",
            LocalizationKey::WindowsVersion => "🖥️ Версия Windows: {}",
            LocalizationKey::Cpu => "💻 Процессор: {}",
            LocalizationKey::SystemConfig => "🔧 Конфигурация системы",
            LocalizationKey::HpetStatus => "Статус HPET: {}",
            LocalizationKey::BenchmarkParams => "⚙️ Параметры тестирования",
            LocalizationKey::StartValue => "Начальное значение",
            LocalizationKey::IncrementValue => "Значение приращения",
            LocalizationKey::EndValue => "Конечное значение",
            LocalizationKey::SampleValue => "Размер выборки",
            LocalizationKey::Iterations => "Итерации",
            LocalizationKey::Dependencies => "🔍 Проверка зависимостей",
            LocalizationKey::Found => "✓ Найдено: {}",
            LocalizationKey::MissingDeps => "❌ Ошибка: Отсутствуют зависимости: {}",
            LocalizationKey::RobustOptimization => "🎯 РОБАСТНАЯ ОПТИМИЗАЦИЯ ТАЙМЕРА",
            LocalizationKey::Parameters => "📊 Параметры:",
            LocalizationKey::Range => "Диапазон: [{:.4}, {:.4}] мс",
            LocalizationKey::IterationsCount => "Итераций: {}",
            LocalizationKey::RunsPerPoint => "Прогонов на точку: {}",
            LocalizationKey::SamplesPerRun => "Выборок за запуск: {}",
            LocalizationKey::Weights => "Веса: точность={:.0}%, стабильность={:.0}%, худший случай={:.0}%",
            LocalizationKey::Accuracy => "точность",
            LocalizationKey::Stability => "стабильность",
            LocalizationKey::WorstCase => "худший случай",
            LocalizationKey::Phase1 => "🔬 Фаза 1: Инициализация",
            LocalizationKey::Phase2 => "🧠 Фаза 2: Байесовская оптимизация",
            LocalizationKey::Phase3 => "📊 Фаза 3: Агрегация и TOPSIS ранжирование",
            LocalizationKey::Points => "точки",
            LocalizationKey::Measurement => "🔬 Измерение {:.4} мс ({} запусков по {} выборок)",
            LocalizationKey::CurrentBest => "Текущий лучший: {:.4} мс (оценка={:.4})",
            LocalizationKey::TopsisRanking => "🏆 ТОП-5 ОПТИМАЛЬНЫХ ЗНАЧЕНИЙ:",
            LocalizationKey::TopResults => "ТОП-5 ОПТИМАЛЬНЫХ ЗНАЧЕНИЙ:",
            LocalizationKey::Rank => "Рейтинг {}",
            LocalizationKey::OptimalValue => "✅ РЕКОМЕНДУЕМОЕ ЗНАЧЕНИЕ: {:.4} мс",
            LocalizationKey::OptimalRecommendation => "{} --resolution {} --no-console",
            LocalizationKey::MeasureSleepExe => "MeasureSleep.exe",
            LocalizationKey::SetTimerResolutionExe => "SetTimerResolution.exe",
            LocalizationKey::PressEnter => "⏳ Нажмите Enter для начала тестирования...",
            LocalizationKey::EnterNewValue => "Введите новое {} (или нажмите Enter для сохранения текущего): ",
            LocalizationKey::KeepCurrent => " (текущее)",
            LocalizationKey::ResultsSaved => "Тестирование успешно завершено",
            LocalizationKey::ExitPrompt => "Нажмите Enter для выхода...",
            LocalizationKey::BenchmarkComplete => "Тестирование успешно завершено",
            LocalizationKey::WarningCleanup => "Предупреждение: Не удалось очистить процессы: {}",
            LocalizationKey::OptimizationMethod => "🎯 Выбор метода оптимизации",
            LocalizationKey::AvailableMethods => "Доступные методы:",
            LocalizationKey::LinearMethod => "Линейный перебор",
            LocalizationKey::LinearMethodDesc1 => "Проверяет каждую точку с заданным шагом",
            LocalizationKey::LinearMethodDesc2 => "Гарантия 100% нахождения оптимума",
            LocalizationKey::LinearMethodDesc3 => "Время: ~50 минут для диапазона 0.5-0.6 ms (шаг 0.0001)",
            LocalizationKey::LinearMethodDesc4 => "Рекомендуется: для полной уверенности",
            LocalizationKey::HybridMethod => "3-фазная гибридная (рекомендуется)",
            LocalizationKey::HybridMethodDesc1 => "Байесовская → Локальная сетка → Точное уточнение",
            LocalizationKey::HybridMethodDesc2 => "Точность: до 0.0001 ms",
            LocalizationKey::HybridMethodDesc3 => "Время: ~5-7 минут",
            LocalizationKey::MethodChoice => "Ваш выбор (1/2) [по умолчанию: 2]: ",
            LocalizationKey::IterationsLinear => "Итераций: {} (линейный перебор)",
            LocalizationKey::IterationsHybrid => "Итераций: ~50 (3-фазная оптимизация)",
            LocalizationKey::IncrementNotUsed => " (не используется в 3-фазном методе)",
            LocalizationKey::MeasureSleepTest => "🔍 Проверка MeasureSleep.exe...",
            LocalizationKey::WindowsChangesTitle => "Windows 10 2004+ и Windows 11: Критические изменения",
            LocalizationKey::WindowsChangesPerProcess => "`timeBeginPeriod()` теперь **per-process** (не глобально)",
            LocalizationKey::WindowsChangesOwnResolution => "Каждый процесс имеет свое собственное разрешение таймера",
            LocalizationKey::WindowsChangesSetAffects => "`SetTimerResolution.exe` влияет **только на свой процесс**",
            LocalizationKey::WindowsChangesMinimized => "**Windows 11**: свернутые окна могут терять высокое разрешение",
            LocalizationKey::WindowsChangesProblem => "**Проблема**: `MeasureSleep.exe` работает как **отдельный процесс** и **не видит** разрешение, установленное `SetTimerResolution.exe`",
            LocalizationKey::WindowsChangesSeparateProcess => "`MeasureSleep.exe` работает как **отдельный процесс**",
            LocalizationKey::WindowsChangesCannotSee => "**не видит** разрешение, установленное `SetTimerResolution.exe`",
            LocalizationKey::WindowsChangesSolution => "**Решение**: TimerResBenchmark теперь использует `NtSetTimerResolution` для **глобального разрешения таймера** (работает на Windows 11)",
            LocalizationKey::WindowsChangesGlobalResolution => "использует низкоуровневый Windows API `NtSetTimerResolution`, который устанавливает разрешение таймера глобально для всей системы",
            LocalizationKey::WindowsChangesLowLevelApi => "обеспечивая, чтобы и процесс бенчмарка, и MeasureSleep.exe видели одно и то же значение разрешения",
            LocalizationKey::LinearMethodTitle => "📏 ЛИНЕЙНЫЙ ПЕРЕБОР",
            LocalizationKey::LinearMethodParameters => "📊 Параметры:",
            LocalizationKey::LinearMethodRange => "   Диапазон: [{:.4}, {:.4}] ms",
            LocalizationKey::LinearMethodStep => "   Шаг: {:.4} ms",
            LocalizationKey::LinearMethodPoints => "   Точек для проверки: {}",
            LocalizationKey::LinearMethodRuns => "   Прогонов на точку: 3",
            LocalizationKey::LinearMethodSamples => "   Выборок на прогон: {}",
            LocalizationKey::LinearMethodEstimatedTime => "⏱️  Приблизительное время: {:.1} минут\n",
            LocalizationKey::LinearMethodCompleted => "✅ Линейный поиск завершён:",
            LocalizationKey::LinearMethodPointsChecked => "   Проверено точек: {}",
            LocalizationKey::LinearMethodUnique => "   Уникальных: {}",
            LocalizationKey::UniquePointsMessage => "   Уникальных точек: {} (было измерений: {})",
            LocalizationKey::TestMeasurementMessage => "   Тест: Δ={:.4} ms, σ={:.4} ms ✓",
        }
    }
}