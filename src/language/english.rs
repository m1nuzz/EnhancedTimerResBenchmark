//! English language support for timer resolution benchmarking

use crate::ui::localization_key::LocalizationKey;

impl LocalizationKey {
    /// Get English translation
    pub fn get_english(&self) -> &'static str {
        match self {
            LocalizationKey::Title => "рџљЂ Enhanced Timer Resolution Benchmark Tool",
            LocalizationKey::SystemInfo => "рџ“Љ System Information",
            LocalizationKey::WorkingDir => "рџ“‚ Working Directory: {}",
            LocalizationKey::AdminPrivileges => "рџ›ЎпёЏ Admin Privileges: вњ“ Confirmed",
            LocalizationKey::WindowsVersion => "рџ–ҐпёЏ Windows Version: {}",
            LocalizationKey::Cpu => "рџ’» CPU: {}",
            LocalizationKey::SystemConfig => "рџ”§ System Configuration",
            LocalizationKey::HpetStatus => "HPET status: {}",
            LocalizationKey::BenchmarkParams => "вљ™пёЏ Benchmark Parameters",
            LocalizationKey::StartValue => "Start Value",
            LocalizationKey::IncrementValue => "Increment Value",
            LocalizationKey::EndValue => "End Value",
            LocalizationKey::SampleValue => "Sample Value",
            LocalizationKey::Iterations => "Iterations",
            LocalizationKey::Dependencies => "рџ”Ќ Checking Dependencies",
            LocalizationKey::Found => "вњ“ Found: {}",
            LocalizationKey::MissingDeps => "вќЊ Error: Missing dependencies: {}",
            LocalizationKey::RobustOptimization => "рџЋЇ ROBUST TIMER OPTIMIZATION",
            LocalizationKey::Parameters => "рџ“Љ Parameters:",
            LocalizationKey::Range => "Range: [{:.4}, {:.4}] ms",
            LocalizationKey::IterationsCount => "Iterations: {}",
            LocalizationKey::RunsPerPoint => "Runs per point: {}",
            LocalizationKey::SamplesPerRun => "Samples per run: {}",
            LocalizationKey::Weights => "Weights: accuracy={:.0}%, stability={:.0}%, worst-case={:.0}%",
            LocalizationKey::Accuracy => "accuracy",
            LocalizationKey::Stability => "stability", 
            LocalizationKey::WorstCase => "worst-case",
            LocalizationKey::Phase1 => "рџ”¬ Phase 1: Initialization",
            LocalizationKey::Phase2 => "рџ§  Phase 2: Bayesian optimization",
            LocalizationKey::Phase3 => "рџ“Љ Phase 3: Aggregation and TOPSIS ranking",
            LocalizationKey::Points => "points",
            LocalizationKey::Measurement => "рџ”¬ Measurement {:.4} ms ({} runs Г— {} samples)",
            LocalizationKey::CurrentBest => "Current best: {:.4} ms (score={:.4})",
            LocalizationKey::TopsisRanking => "рџЏ† TOP-5 OPTIMAL VALUES:",
            LocalizationKey::TopResults => "TOP-5 OPTIMAL VALUES:",
            LocalizationKey::Rank => "Rank {}",
            LocalizationKey::OptimalValue => "вњ… RECOMMENDED VALUE: {:.4} ms",
            LocalizationKey::OptimalRecommendation => "{} --resolution {} --no-console",
            LocalizationKey::MeasureSleepExe => "MeasureSleep.exe",
            LocalizationKey::SetTimerResolutionExe => "SetTimerResolution.exe",
            LocalizationKey::PressEnter => "вЏі Press Enter to start the benchmark...",
            LocalizationKey::EnterNewValue => "Enter new {} (or press Enter to keep current): ",
            LocalizationKey::KeepCurrent => " (current)",
            LocalizationKey::ResultsSaved => "Benchmarking completed successfully",
            LocalizationKey::ExitPrompt => "Press Enter to exit...",
            LocalizationKey::BenchmarkComplete => "Benchmarking completed successfully",
            LocalizationKey::WarningCleanup => "Warning: Failed to cleanup processes: {}",
            LocalizationKey::OptimizationMethod => "рџЋЇ Optimization Method Selection",
            LocalizationKey::AvailableMethods => "Available methods:",
            LocalizationKey::LinearMethod => "Linear Search",
            LocalizationKey::LinearMethodDesc1 => "Check every point with specified step",
            LocalizationKey::LinearMethodDesc2 => "Guarantee 100% finding global optimum",
            LocalizationKey::LinearMethodDesc3 => "Time: ~50 minutes for range 0.5-0.6 ms (step 0.0001)",
            LocalizationKey::LinearMethodDesc4 => "Recommended: for complete confidence",
            LocalizationKey::HybridMethod => "3-phase hybrid (recommended)",
            LocalizationKey::HybridMethodDesc1 => "Bayesian в†’ Local Grid в†’ Precise Refinement",
            LocalizationKey::HybridMethodDesc2 => "Precision: up to 0.0001 ms",
            LocalizationKey::HybridMethodDesc3 => "Time: ~5-7 minutes",
            LocalizationKey::MethodChoice => "Your choice (1/2) [default: 2]: ",
            LocalizationKey::IterationsLinear => "Iterations: {} (linear search)",
            LocalizationKey::IterationsHybrid => "Iterations: ~50 (3-phase optimization)",
            LocalizationKey::IncrementNotUsed => " (not used in 3-phase method)",
            LocalizationKey::MeasureSleepTest => "?? Testing MeasureSleep.exe...",
            LocalizationKey::WindowsChangesTitle => "Windows 10 2004+ and Windows 11: Critical Changes",
            LocalizationKey::WindowsChangesPerProcess => "`timeBeginPeriod()` is now **per-process** (not global)",
            LocalizationKey::WindowsChangesOwnResolution => "Each process has its own timer resolution",
            LocalizationKey::WindowsChangesSetAffects => "`SetTimerResolution.exe` affects **only its own process**",
            LocalizationKey::WindowsChangesMinimized => "**Windows 11**: minimized windows may lose high resolution",
            LocalizationKey::WindowsChangesProblem => "**Problem**: `MeasureSleep.exe` runs as a **separate process** and **cannot see** the resolution set by `SetTimerResolution.exe`",
            LocalizationKey::WindowsChangesSeparateProcess => "`MeasureSleep.exe` runs as a **separate process**",
            LocalizationKey::WindowsChangesCannotSee => "**cannot see** the resolution set by `SetTimerResolution.exe`",
            LocalizationKey::WindowsChangesSolution => "**Solution**: TimerResBenchmark now uses `NtSetTimerResolution` for **global timer resolution** (works on Windows 11)",
            LocalizationKey::WindowsChangesGlobalResolution => "uses low-level Windows API `NtSetTimerResolution` that sets the timer resolution globally for the entire system",
            LocalizationKey::WindowsChangesLowLevelApi => "ensuring both the benchmark process and MeasureSleep.exe see the same resolution setting",
            LocalizationKey::LinearMethodTitle => "📏 LINEAR SEARCH",
            LocalizationKey::LinearMethodParameters => "📊 Parameters:",
            LocalizationKey::LinearMethodRange => "   Range: [{:.4}, {:.4}] ms",
            LocalizationKey::LinearMethodStep => "   Step: {:.4} ms",
            LocalizationKey::LinearMethodPoints => "   Points to check: {}",
            LocalizationKey::LinearMethodRuns => "   Runs per point: 3",
            LocalizationKey::LinearMethodSamples => "   Samples per run: {}",
            LocalizationKey::LinearMethodEstimatedTime => "⏱️  Estimated time: {:.1} minutes\n",
            LocalizationKey::LinearMethodCompleted => "✅ Linear search completed:",
            LocalizationKey::LinearMethodPointsChecked => "   Points checked: {}",
            LocalizationKey::LinearMethodUnique => "   Unique: {}",
            LocalizationKey::UniquePointsMessage => "   Unique points: {} (was measured: {})",
            LocalizationKey::TestMeasurementMessage => "   Test: Δ={:.4} ms, σ={:.4} ms ✓",
        }
    }
}
