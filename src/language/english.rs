//! English language support for timer resolution benchmarking

use crate::ui::localization_key::LocalizationKey;

impl LocalizationKey {
    /// Get English translation
    pub fn get_english(&self) -> &'static str {
        match self {
            LocalizationKey::Title => "рџљЂ Enhanced Timer Resolution Benchmark Tool",
            LocalizationKey::SystemInfo => "рџ“Љ System Information",
            LocalizationKey::WorkingDir => "рџ“‚ Working Directory: {}",
            LocalizationKey::AdminPrivileges => "рџ›ЎпёЏ Admin Privileges: вњ“ Confirmed",
            LocalizationKey::WindowsVersion => "рџ–ҐпёЏ Windows Version: {}",
            LocalizationKey::Cpu => "рџ’» CPU: {}",
            LocalizationKey::SystemConfig => "рџ”§ System Configuration",
            LocalizationKey::HpetStatus => "HPET status: {}",
            LocalizationKey::BenchmarkParams => "вљ™пёЏ Benchmark Parameters",
            LocalizationKey::StartValue => "Start Value",
            LocalizationKey::IncrementValue => "Increment Value",
            LocalizationKey::EndValue => "End Value",
            LocalizationKey::SampleValue => "Sample Value",
            LocalizationKey::Iterations => "Iterations",
            LocalizationKey::Dependencies => "рџ”Ќ Checking Dependencies",
            LocalizationKey::Found => "вњ“ Found: {}",
            LocalizationKey::MissingDeps => "вќЊ Error: Missing dependencies: {}",
            LocalizationKey::RobustOptimization => "рџЋЇ ROBUST TIMER OPTIMIZATION",
            LocalizationKey::Parameters => "рџ“Љ Parameters:",
            LocalizationKey::Range => "Range: [{:.4}, {:.4}] ms",
            LocalizationKey::IterationsCount => "Iterations: {}",
            LocalizationKey::RunsPerPoint => "Runs per point: {}",
            LocalizationKey::SamplesPerRun => "Samples per run: {}",
            LocalizationKey::Weights => "Weights: accuracy={:.0}%, stability={:.0}%, worst-case={:.0}%",
            LocalizationKey::Accuracy => "accuracy",
            LocalizationKey::Stability => "stability", 
            LocalizationKey::WorstCase => "worst-case",
            LocalizationKey::Phase1 => "рџ”¬ Phase 1: Initialization",
            LocalizationKey::Phase2 => "рџ§  Phase 2: Bayesian optimization",
            LocalizationKey::Phase3 => "рџ“Љ Phase 3: Aggregation and TOPSIS ranking",
            LocalizationKey::Points => "points",
            LocalizationKey::Measurement => "рџ”¬ Measurement {:.4} ms ({} runs Г— {} samples)",
            LocalizationKey::CurrentBest => "Current best: {:.4} ms (score={:.4})",
            LocalizationKey::TopsisRanking => "рџЏ† TOP-5 OPTIMAL VALUES:",
            LocalizationKey::TopResults => "TOP-5 OPTIMAL VALUES:",
            LocalizationKey::Rank => "Rank {}",
            LocalizationKey::OptimalValue => "вњ… RECOMMENDED VALUE: {:.4} ms",
            LocalizationKey::OptimalRecommendation => "{} --resolution {} --no-console",
            LocalizationKey::MeasureSleepExe => "MeasureSleep.exe",
            LocalizationKey::SetTimerResolutionExe => "SetTimerResolution.exe",
            LocalizationKey::PressEnter => "вЏі Press Enter to start the benchmark...",
            LocalizationKey::EnterNewValue => "Enter new {} (or press Enter to keep current): ",
            LocalizationKey::KeepCurrent => " (current)",
            LocalizationKey::ResultsSaved => "Benchmarking completed successfully",
            LocalizationKey::ExitPrompt => "Press Enter to exit...",
            LocalizationKey::BenchmarkComplete => "Benchmarking completed successfully",
            LocalizationKey::WarningCleanup => "Warning: Failed to cleanup processes: {}",
            LocalizationKey::OptimizationMethod => "рџЋЇ Optimization Method Selection",
            LocalizationKey::AvailableMethods => "Available methods:",
            LocalizationKey::LinearMethod => "Linear Search",
            LocalizationKey::LinearMethodDesc1 => "Check every point with specified step",
            LocalizationKey::LinearMethodDesc2 => "Guarantee 100% finding global optimum",
            LocalizationKey::LinearMethodDesc3 => "Time: ~50 minutes for range 0.5-0.6 ms (step 0.0001)",
            LocalizationKey::LinearMethodDesc4 => "Recommended: for complete confidence",
            LocalizationKey::HybridMethod => "3-phase hybrid (recommended)",
            LocalizationKey::HybridMethodDesc1 => "Bayesian в†’ Local Grid в†’ Precise Refinement",
            LocalizationKey::HybridMethodDesc2 => "Precision: up to 0.0001 ms",
            LocalizationKey::HybridMethodDesc3 => "Time: ~5-7 minutes",
            LocalizationKey::MethodChoice => "Your choice (1/2/3) [default: 3]: ",
            LocalizationKey::IterationsLinear => "Iterations: {} (linear search)",
            LocalizationKey::IterationsHybrid => "Iterations: ~50 (3-phase optimization)",
            LocalizationKey::IncrementNotUsed => " (not used in 3-phase method)",
            LocalizationKey::MeasureSleepTest => "?? Testing MeasureSleep.exe...",
            LocalizationKey::WindowsChangesTitle => "Windows 10 2004+ and Windows 11: Critical Changes",
            LocalizationKey::WindowsChangesPerProcess => "`timeBeginPeriod()` is now **per-process** (not global)",
            LocalizationKey::WindowsChangesOwnResolution => "Each process has its own timer resolution",
            LocalizationKey::WindowsChangesSetAffects => "`SetTimerResolution.exe` affects **only its own process**",
            LocalizationKey::WindowsChangesMinimized => "**Windows 11**: minimized windows may lose high resolution",
            LocalizationKey::WindowsChangesProblem => "**Problem**: `MeasureSleep.exe` runs as a **separate process** and **cannot see** the resolution set by `SetTimerResolution.exe`",
            LocalizationKey::WindowsChangesSeparateProcess => "`MeasureSleep.exe` runs as a **separate process**",
            LocalizationKey::WindowsChangesCannotSee => "**cannot see** the resolution set by `SetTimerResolution.exe`",
            LocalizationKey::WindowsChangesSolution => "**Solution**: TimerResBenchmark now uses `NtSetTimerResolution` for **global timer resolution** (works on Windows 11)",
            LocalizationKey::WindowsChangesGlobalResolution => "uses low-level Windows API `NtSetTimerResolution` that sets the timer resolution globally for the entire system",
            LocalizationKey::WindowsChangesLowLevelApi => "ensuring both the benchmark process and MeasureSleep.exe see the same resolution setting",
            LocalizationKey::LinearMethodTitle => "📏 LINEAR SEARCH",
            LocalizationKey::LinearMethodParameters => "📊 Parameters:",
            LocalizationKey::LinearMethodRange => "   Range: [{:.4}, {:.4}] ms",
            LocalizationKey::LinearMethodStep => "   Step: {:.4} ms",
            LocalizationKey::LinearMethodPoints => "   Points to check: {}",
            LocalizationKey::LinearMethodRuns => "   Runs per point: 3",
            LocalizationKey::LinearMethodSamples => "   Samples per run: {}",
            LocalizationKey::LinearMethodEstimatedTime => "⏱️  Estimated time: {:.1} minutes\n",
            LocalizationKey::LinearMethodCompleted => "✅ Linear search completed:",
            LocalizationKey::LinearMethodPointsChecked => "   Points checked: {}",
            LocalizationKey::LinearMethodUnique => "   Unique: {}",
            LocalizationKey::UniquePointsMessage => "   Unique points: {} (was measured: {})",
            LocalizationKey::TestMeasurementMessage => "   Test: Δ={:.4} ms, σ={:.4} ms ✓",
            LocalizationKey::HpetStatusCached => "HPET status (cached): {}",
            LocalizationKey::ErrorHpetStatus => "Failed to get HPET status",
            LocalizationKey::HpetEnabledWarning => "⚠️  Warning: HPET is enabled, which may affect timer resolution",
            LocalizationKey::HpetTroubleshooting => "If you experience issues with timer resolution, consider disabling HPET in BIOS/UEFI settings",
            LocalizationKey::HpetDisablePrompt => "Would you like to try disabling HPET via registry tweak? (y/N): ",
            LocalizationKey::ErrorHpetDisable => "Failed to disable HPET: {}",
            LocalizationKey::HpetDisabledSuccess => "HPET registry settings adjusted. Reboot required for changes to take effect",
            LocalizationKey::ErrorRegistryTweak => "Failed to apply registry tweak",
            LocalizationKey::ErrorParseMeasureSleep => "Failed to parse MeasureSleep output",
            LocalizationKey::InvalidMeasureSleepOutput => "Invalid MeasureSleep output format",
            LocalizationKey::ErrorAdminPrivileges => "Administrator privileges required",
            LocalizationKey::RunAsAdmin => "Please run as administrator",
            LocalizationKey::UnknownBuild => "Unknown build",
            LocalizationKey::UnknownCpu => "Unknown CPU",
            LocalizationKey::ErrorSaveParameters => "Failed to save parameters: {}",
            LocalizationKey::ErrorConfiguration => "Configuration error: {}",
            LocalizationKey::ErrorGetExePath => "Failed to get executable path",
            LocalizationKey::ErrorMeasureSleep => "Error: MeasureSleep.exe failed",
            LocalizationKey::TestPassed => "   Test: Δ={:.4} ms, σ={:.4} ms ✓",
            LocalizationKey::CleaningUp => "🧹 Cleaning up processes...",
            LocalizationKey::CriticalProcessRemaining => "⚠️  {} SetTimerResolution.exe instance(s) still running after cleanup",
            LocalizationKey::ManualCleanupInstructions => "Manual cleanup required:",
            LocalizationKey::ManualCleanup1 => "1. Open Task Manager (Ctrl+Shift+Esc)",
            LocalizationKey::ManualCleanup2 => "2. Go to 'Details' tab",
            LocalizationKey::ManualCleanup3 => "3. Find processes named 'SetTimerResolution.exe'",
            LocalizationKey::ManualCleanup4 => "4. Right-click and select 'End Task' for each one",
            LocalizationKey::ErrorCannotProceed => "Cannot proceed with benchmark until processes are cleaned up",
            LocalizationKey::CleanupCompleted => "✅ Cleanup completed",
            LocalizationKey::ErrorLinearSearch => "Linear search error: {}",
            LocalizationKey::ErrorOptimization => "Optimization error: {}",
            LocalizationKey::ErrorInvalidMethod => "Invalid method selected",
            LocalizationKey::KernelWidth => "Kernel width: {:.4}",
            LocalizationKey::InitialPoints => "Initial points: {:?}",
            LocalizationKey::InitProgressBar => "{spinner:.green} [{elapsed_precise}] [{bar:40.cyan/blue}] {pos}/{len} {msg} | ETA: {eta}",
            LocalizationKey::InitPointMessage => "{:.4} ms",
            LocalizationKey::InitCompleted => "initialization completed",
            LocalizationKey::OptProgressBar => "{spinner:.green} [{elapsed_precise}] [{bar:40.cyan/blue}] {pos}/{len} {msg} | ETA: {eta}",
            LocalizationKey::OptCompleted => "optimization completed",
            LocalizationKey::UniquePoints => "   Unique points: {} (total processed: {})",
            LocalizationKey::TopsisScore => "   TOPSIS Score: {:.4}",
            LocalizationKey::P95Delta => "   P95(Δ): {:.4} ms",
            LocalizationKey::Mad => "   MAD(Δ): {:.4} ms",
            LocalizationKey::P99Delta => "   P99(Δ): {:.4} ms",
            LocalizationKey::CiWidth => "   95% CI width: {:.4} ms",
            LocalizationKey::ErrorMutexConflict => "Mutex conflict detected",
            LocalizationKey::MutexErrorMessage => "Error message: {}",
            LocalizationKey::MutexErrorHint => "Hint: Another timer resolution utility may be running",
            LocalizationKey::MutexErrorRestart => "If this error persists, try rebooting your computer",
            LocalizationKey::ErrorMutexRunning => "Timer resolution process already running",
            LocalizationKey::ErrorProcessExited => "Process exited unexpectedly: {}",
            LocalizationKey::WarningCannotCheckProcess => "Warning: Cannot check process status: {}",
            LocalizationKey::ErrorMeasureSleepFailed => "MeasureSleep.exe execution failed",
            LocalizationKey::WarningResolutionMismatch => "⚠️  Resolution mismatch detected",
            LocalizationKey::Expected => "   Expected: {:.4} ms",
            LocalizationKey::Reported => "   Reported: {:.4} ms",
            LocalizationKey::Diff => "   Diff: {:.4} ms",
            LocalizationKey::CriticalMismatch => "Critical mismatch: expected {:.4} ms but measured {:.4} ms",
            LocalizationKey::Verified => "   Verified: {:.4} ms ✓",
            LocalizationKey::WarningParseResolution => "⚠️  Warning: Could not parse resolution from output",
            LocalizationKey::OutputPreview => "   Output preview: {}",
            LocalizationKey::Empty => "empty",
            LocalizationKey::WarningKillChild => "Warning: Failed to kill child process: {}",
            LocalizationKey::LinearSearchCompleted => "linear search completed",
            LocalizationKey::PointsChecked => "   Points checked: {}",
            LocalizationKey::Unique => "   Unique: {}",
            LocalizationKey::KillAttempt => "   Attempting to kill SetTimerResolution.exe processes...",
            LocalizationKey::KillSuccessPS => "   ✓ PowerShell kill method succeeded",
            LocalizationKey::KillWarningPS => "   ⚠️ PowerShell warning: {}",
            LocalizationKey::KillErrorPS => "   ❌ PowerShell kill method failed: {}",
            LocalizationKey::KillSuccessTaskkill => "   ✓ taskkill method succeeded",
            LocalizationKey::KillInfoTaskkillDisabled => "   ℹ️ taskkill service is disabled (using PowerShell only)",
            LocalizationKey::KillWarningTaskkill => "   ⚠️ taskkill warning: {}",
            LocalizationKey::KillInfoTaskkillUnavailable => "   ℹ️ taskkill not available",
            LocalizationKey::KillSuccessWmic => "   ✓ wmic method succeeded",
            LocalizationKey::KillWarningRemaining => "   ⚠️ {} instance(s) still remain after cleanup",
            LocalizationKey::KillErrorRemaining => "   ❌ {} SetTimerResolution.exe instance(s) could not be killed",
            LocalizationKey::KillSuccessAll => "   ✓ All instances successfully killed",
            LocalizationKey::PointInfo => "  ({}/{}) Setting resolution: {:.4} ms",
            LocalizationKey::IterationsWithKappa => "{} of {}: x={:.4}, κ={:.2}",
            LocalizationKey::MeasureSleepError => "MeasureSleep error: {}",
            LocalizationKey::JoinError => "Join error: {}",
            LocalizationKey::TimeoutError => "Timeout error",
            LocalizationKey::GetMeasurementStats => "   Mean(Δ): {:.4} ms, P95(Δ): {:.4} ms, MAD(Δ): {:.4} ms, Outliers removed: {}",
            LocalizationKey::GetMeasurementWithRuns => "Measuring {:.4} ms ({} runs × {} samples)",
            LocalizationKey::GetExitPrompt => "Press any key to exit...",
            LocalizationKey::FastLinearMethod => "Fast Linear Search (Recommended)",
            LocalizationKey::FastLinearMethodTitle => "🚀 FAST LINEAR SEARCH",
            LocalizationKey::FastLinearMethodDesc1 => "Checks every point sequentially (FAST mode)",
            LocalizationKey::FastLinearMethodDesc2 => "Early stopping (stops when optimum found)",
            LocalizationKey::FastLinearMethodDesc3 => "Configurable early stop threshold (fast completion)",
            LocalizationKey::FastLinearMethodDesc4 => "Optimal for most users (~2-5 minutes)",
            LocalizationKey::EarlyStopThreshold => "Early Stop Threshold",
        }
    }
}
